{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\Desktop\\\\powerApp\\\\client\\\\src\\\\components\\\\Programs\\\\ManageProgram.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Column from \"./ProgramBoard/Column\";\nimport ProgramForm from \"./ProgramForm\";\nimport { API_URL } from \"../../constants\";\nimport { StyledContainer } from \"../../styles\";\n\nclass ManageProgram extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        id\n      } = this.props.match.params;\n      const {\n        programNumber,\n        programName,\n        columns\n      } = this.state;\n      const program = {\n        programNumber,\n        programName,\n        programInfo: columns[\"column-2\"].items\n      };\n      axios.put(`${API_URL}/programs/update/${id}`, program).then(res => {\n        const {\n          history\n        } = this.props;\n        alert(\"updated!\");\n        history.push(\"/programs\");\n      });\n    };\n\n    this.onChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      programName: \"\",\n      programNumber: \"\",\n      programInfo: [],\n      tracks: [],\n      tracksEnums: {},\n      columns: {\n        \"column-1\": {\n          name: \"Tracks\",\n          items: []\n        },\n        \"column-2\": {\n          name: \"Program List\",\n          items: []\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    Promise.all([axios.get(`${API_URL}/programs/${id}`).then(response => {\n      return response.data;\n    }), axios.get(`${API_URL}/tracks/`).then(response => {\n      return response.data;\n    })]).then(([programs, tracks]) => {\n      const tracksEnums = tracks.reduce((all, one) => {\n        return { ...all,\n          [one._id]: one\n        };\n      }, {});\n      this.setState(oldState => {\n        const state = { ...oldState\n        };\n        state.columns[\"column-1\"].items = tracks.filter(track => {\n          return !programs.programInfo.some(progTrac => progTrac._id === track._id);\n        });\n        state.columns[\"column-2\"].items = programs.programInfo;\n        return { ...state,\n          ...programs,\n          tracksEnums,\n          tracks\n        };\n      });\n    });\n  }\n\n  render() {\n    const {\n      columns,\n      tracksEnums,\n      tracks,\n      programInfo,\n      ...rest\n    } = this.state;\n    const col1 = columns[\"column-1\"];\n    const col2 = columns[\"column-2\"];\n    return React.createElement(StyledContainer, {\n      fluid: true,\n      title: \"Update Program\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(ProgramForm, Object.assign({}, this.state, {\n      buttonText: \"Update Program\",\n      onChange: this.onChange,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(DragDropContext, {\n      onDragEnd: ({\n        source,\n        destination\n      }) => {\n        if (!destination) {\n          return;\n        }\n\n        const {\n          droppableId: sourceId,\n          index: sourceIndex\n        } = source;\n        const {\n          droppableId: destinationId,\n          index: destinationIndex\n        } = destination;\n\n        if (sourceId !== destinationId) {\n          this.setState(prev => {\n            const sourceColumn = prev.columns[sourceId];\n            const destColumn = prev.columns[destinationId];\n            const sourceItems = [...sourceColumn.items];\n            const destItems = [...destColumn.items];\n            const [removed] = sourceItems.splice(source.index, 1);\n            destItems.splice(destination.index, 0, removed);\n            return { ...prev,\n              columns: { ...prev.columns,\n                [sourceId]: { ...sourceColumn,\n                  items: sourceItems\n                },\n                [destinationId]: { ...destColumn,\n                  items: destItems\n                }\n              }\n            };\n          });\n        } else {\n          this.setState(prev => {\n            const column = prev.columns[sourceId];\n            const copiedItems = [...column.items];\n            const [removed] = copiedItems.splice(source.index, 1);\n            copiedItems.splice(destination.index, 0, removed);\n            return { ...prev,\n              columns: { ...prev.columns,\n                [sourceId]: { ...column,\n                  items: copiedItems\n                }\n              }\n            };\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, Object.entries(columns).map(([id, column]) => {\n      return React.createElement(Column, Object.assign({ ...column,\n        id,\n        key: id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nexport default ManageProgram;","map":{"version":3,"sources":["C:/Users/Eric/Desktop/powerApp/client/src/components/Programs/ManageProgram.js"],"names":["React","Component","axios","DragDropContext","Column","ProgramForm","API_URL","StyledContainer","ManageProgram","constructor","props","onSubmit","e","preventDefault","id","match","params","programNumber","programName","columns","state","program","programInfo","items","put","then","res","history","alert","push","onChange","name","value","target","setState","tracks","tracksEnums","componentDidMount","Promise","all","get","response","data","programs","reduce","one","_id","oldState","filter","track","some","progTrac","render","rest","col1","col2","source","destination","droppableId","sourceId","index","sourceIndex","destinationId","destinationIndex","prev","sourceColumn","destColumn","sourceItems","destItems","removed","splice","column","copiedItems","Object","entries","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport Column from \"./ProgramBoard/Column\";\r\nimport ProgramForm from \"./ProgramForm\";\r\nimport { API_URL } from \"../../constants\";\r\nimport { StyledContainer } from \"../../styles\";\r\n\r\nclass ManageProgram extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      programName: \"\",\r\n      programNumber: \"\",\r\n      programInfo: [],\r\n      tracks: [],\r\n      tracksEnums: {},\r\n      columns: {\r\n        \"column-1\": {\r\n          name: \"Tracks\",\r\n          items: [],\r\n        },\r\n        \"column-2\": {\r\n          name: \"Program List\",\r\n          items: [],\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    Promise.all([\r\n      axios.get(`${API_URL}/programs/${id}`).then((response) => {\r\n        return response.data;\r\n      }),\r\n      axios.get(`${API_URL}/tracks/`).then((response) => {\r\n        return response.data;\r\n      }),\r\n    ]).then(([programs, tracks]) => {\r\n      const tracksEnums = tracks.reduce((all, one) => {\r\n        return {\r\n          ...all,\r\n          [one._id]: one,\r\n        };\r\n      }, {});\r\n\r\n      this.setState((oldState) => {\r\n        const state = { ...oldState };\r\n\r\n        state.columns[\"column-1\"].items = tracks.filter((track) => {\r\n          return !programs.programInfo.some(\r\n            (progTrac) => progTrac._id === track._id\r\n          );\r\n        });\r\n\r\n        state.columns[\"column-2\"].items = programs.programInfo;\r\n        return {\r\n          ...state,\r\n          ...programs,\r\n          tracksEnums,\r\n          tracks,\r\n        };\r\n      });\r\n    });\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { id } = this.props.match.params;\r\n    const { programNumber, programName, columns } = this.state;\r\n    const program = {\r\n      programNumber,\r\n      programName,\r\n\r\n      programInfo: columns[\"column-2\"].items,\r\n    };\r\n\r\n    axios.put(`${API_URL}/programs/update/${id}`, program).then((res) => {\r\n      const { history } = this.props;\r\n      alert(\"updated!\");\r\n      history.push(\"/programs\");\r\n    });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { columns, tracksEnums, tracks, programInfo, ...rest } = this.state;\r\n    const col1 = columns[\"column-1\"];\r\n    const col2 = columns[\"column-2\"];\r\n    return (\r\n      <StyledContainer fluid title=\"Update Program\">\r\n        <ProgramForm\r\n          {...this.state}\r\n          buttonText=\"Update Program\"\r\n          onChange={this.onChange}\r\n          onSubmit={this.onSubmit}\r\n        />\r\n        <DragDropContext\r\n          onDragEnd={({ source, destination }) => {\r\n            if (!destination) {\r\n              return;\r\n            }\r\n            const { droppableId: sourceId, index: sourceIndex } = source;\r\n            const {\r\n              droppableId: destinationId,\r\n              index: destinationIndex,\r\n            } = destination;\r\n\r\n            if (sourceId !== destinationId) {\r\n              this.setState((prev) => {\r\n                const sourceColumn = prev.columns[sourceId];\r\n                const destColumn = prev.columns[destinationId];\r\n                const sourceItems = [...sourceColumn.items];\r\n                const destItems = [...destColumn.items];\r\n                const [removed] = sourceItems.splice(source.index, 1);\r\n                destItems.splice(destination.index, 0, removed);\r\n                return {\r\n                  ...prev,\r\n                  columns: {\r\n                    ...prev.columns,\r\n                    [sourceId]: {\r\n                      ...sourceColumn,\r\n                      items: sourceItems,\r\n                    },\r\n                    [destinationId]: {\r\n                      ...destColumn,\r\n                      items: destItems,\r\n                    },\r\n                  },\r\n                };\r\n              });\r\n            } else {\r\n              this.setState((prev) => {\r\n                const column = prev.columns[sourceId];\r\n                const copiedItems = [...column.items];\r\n                const [removed] = copiedItems.splice(source.index, 1);\r\n                copiedItems.splice(destination.index, 0, removed);\r\n                return {\r\n                  ...prev,\r\n                  columns: {\r\n                    ...prev.columns,\r\n                    [sourceId]: {\r\n                      ...column,\r\n                      items: copiedItems,\r\n                    },\r\n                  },\r\n                };\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          {Object.entries(columns).map(([id, column]) => {\r\n            return <Column {...{ ...column, id, key: id }} />;\r\n          })}\r\n        </DragDropContext>\r\n      </StyledContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageProgram;\r\n"]},"metadata":{},"sourceType":"module"}