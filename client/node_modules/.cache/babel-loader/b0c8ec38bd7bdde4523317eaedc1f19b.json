{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\Desktop\\\\powerApp\\\\client\\\\src\\\\components\\\\Elements\\\\DropdownItems\\\\Formats\\\\CreateFormat.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Form, Button } from \"react-bootstrap\";\nimport FormatList from \"./FormatList\";\nimport ComponentWrapper from \"../../../ComponentWrapper\";\nimport { API_URL } from \"../../../../constants\";\n\nclass CreateFormat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        elementFormat\n      } = this.state;\n      const newItem = {\n        elementFormat\n      };\n      axios.post(`${API_URL}/formats/add`, newItem).then(res => {\n        alert(\"New Format Added!\");\n        this.setState({\n          elementFormat: \"\",\n          new_item: newItem\n        });\n      }).catch(error => console.log(error.response));\n    };\n\n    this.state = {\n      elementFormat: \"\",\n      new_item: {}\n    };\n  }\n\n  render() {\n    const {\n      elementFormat\n    } = this.state;\n    return React.createElement(ComponentWrapper, {\n      title: \"Create New Format\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"elementFormat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Format:\"), React.createElement(Form.Control, {\n      name: \"elementFormat\",\n      onChange: e => {\n        const {\n          name,\n          value\n        } = e.target;\n        this.setState({\n          [name]: value\n        });\n      },\n      required: true,\n      type: \"text\",\n      value: elementFormat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"submit\",\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Create New Format\")), React.createElement(FormatList, {\n      newItem: this.state.new_item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CreateFormat;","map":{"version":3,"sources":["C:/Users/Eric/Desktop/powerApp/client/src/components/Elements/DropdownItems/Formats/CreateFormat.js"],"names":["React","Component","axios","Form","Button","FormatList","ComponentWrapper","API_URL","CreateFormat","constructor","props","onSubmit","e","preventDefault","elementFormat","state","newItem","post","then","res","alert","setState","new_item","catch","error","console","log","response","render","name","value","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AACnCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,QARmB,GAQRC,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAoB,KAAKC,KAA/B;AAEA,YAAMC,OAAO,GAAG;AAAEF,QAAAA;AAAF,OAAhB;AAEAZ,MAAAA,KAAK,CACFe,IADH,CACS,GAAEV,OAAQ,cADnB,EACkCS,OADlC,EAEGE,IAFH,CAEQC,GAAG,IAAI;AACXC,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACA,aAAKC,QAAL,CAAc;AACZP,UAAAA,aAAa,EAAE,EADH;AAEZQ,UAAAA,QAAQ,EAAEN;AAFE,SAAd;AAID,OARH,EASGO,KATH,CASSC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB,CATlB;AAUD,KAxBkB;;AAEjB,SAAKZ,KAAL,GAAa;AACXD,MAAAA,aAAa,EAAE,EADJ;AAEXQ,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AAoBDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEd,MAAAA;AAAF,QAAoB,KAAKC,KAA/B;AAEA,WACE,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAC,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKJ,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,MAAA,IAAI,EAAC,eADP;AAEE,MAAA,QAAQ,EAAEC,CAAC,IAAI;AACb,cAAM;AAAEiB,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAkBlB,CAAC,CAACmB,MAA1B;AACA,aAAKV,QAAL,CAAc;AACZ,WAACQ,IAAD,GAAQC;AADI,SAAd;AAGD,OAPH;AAQE,MAAA,QAAQ,MARV;AASE,MAAA,IAAI,EAAC,MATP;AAUE,MAAA,KAAK,EAAEhB,aAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAgBE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAhBF,CADF,EAqBE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWO,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CADF;AAyBD;;AAvDkC;;AA0DrC,eAAed,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport FormatList from \"./FormatList\";\r\nimport ComponentWrapper from \"../../../ComponentWrapper\";\r\nimport { API_URL } from \"../../../../constants\";\r\n\r\nclass CreateFormat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      elementFormat: \"\",\r\n      new_item: {},\r\n    };\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { elementFormat } = this.state;\r\n\r\n    const newItem = { elementFormat };\r\n\r\n    axios\r\n      .post(`${API_URL}/formats/add`, newItem)\r\n      .then(res => {\r\n        alert(\"New Format Added!\");\r\n        this.setState({\r\n          elementFormat: \"\",\r\n          new_item: newItem,\r\n        });\r\n      })\r\n      .catch(error => console.log(error.response));\r\n  };\r\n\r\n  render() {\r\n    const { elementFormat } = this.state;\r\n\r\n    return (\r\n      <ComponentWrapper title=\"Create New Format\">\r\n        <Form onSubmit={this.onSubmit}>\r\n          <Form.Group controlId=\"elementFormat\">\r\n            <Form.Label>Format:</Form.Label>\r\n            <Form.Control\r\n              name=\"elementFormat\"\r\n              onChange={e => {\r\n                const { name, value } = e.target;\r\n                this.setState({\r\n                  [name]: value,\r\n                });\r\n              }}\r\n              required\r\n              type=\"text\"\r\n              value={elementFormat}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Create New Format\r\n          </Button>\r\n        </Form>\r\n        <FormatList newItem={this.state.new_item} />\r\n      </ComponentWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateFormat;\r\n"]},"metadata":{},"sourceType":"module"}