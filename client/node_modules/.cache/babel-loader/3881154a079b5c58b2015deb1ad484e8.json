{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\Desktop\\\\powerApp\\\\client\\\\src\\\\components\\\\Tracks\\\\CreateTrack.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { Row } from \"react-bootstrap\";\nimport Column from \"./TracksBoard/Column\";\nimport TrackForm from \"./TrackForm\";\nimport { StyledContainer } from \"../../styles\";\nimport { API_URL } from \"../../constants\";\n\nclass CreateTrack extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const {\n        id,\n        value\n      } = e.target;\n      this.setState({\n        [id]: value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        trackNumber,\n        trackName,\n        columns\n      } = this.state;\n      axios.post(`${API_URL}/tracks/add`, {\n        trackNumber,\n        trackName,\n        trackInfo: columns[\"column-2\"].items\n      }).then(res => {\n        this.setState(prev => {\n          return { ...prev,\n            trackName: \"\",\n            trackNumber: \"\",\n            columns: {\n              \"column-1\": {\n                name: \"Elements\",\n                items: prev.elements\n              },\n              \"column-2\": {\n                name: \"Track List\",\n                items: []\n              }\n            }\n          };\n        });\n      });\n    };\n\n    this.state = {\n      trackName: \"\",\n      trackNumber: \"\",\n      elements: [],\n      columns: {\n        \"column-1\": {\n          name: \"Elements\",\n          items: []\n        },\n        \"column-2\": {\n          name: \"Track List\",\n          items: []\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${API_URL}/elements/`).then(response => {\n      this.setState(prev => {\n        const copy = { ...prev\n        };\n        const {\n          columns\n        } = copy;\n        copy.elements = response.data;\n        columns[\"column-1\"].items = [...copy.columns[\"column-1\"].items, ...response.data];\n        return copy;\n      });\n    });\n  }\n\n  render() {\n    const {\n      columns\n    } = this.state;\n    return React.createElement(StyledContainer, {\n      fluid: true,\n      title: \"Create Track\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(TrackForm, Object.assign({}, this.state, {\n      buttonText: \"Submit\",\n      onChange: this.onChange,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(DragDropContext, {\n      onDragEnd: ({\n        source,\n        destination\n      }) => {\n        if (!destination) {\n          return;\n        }\n\n        if (source.droppableId !== destination.droppableId) {\n          this.setState(prev => {\n            const sourceColumn = prev.columns[source.droppableId];\n            const destColumn = prev.columns[destination.droppableId];\n            const sourceItems = [...sourceColumn.items];\n            const destItems = [...destColumn.items];\n            const [removed] = sourceItems.splice(source.index, 1);\n            destItems.splice(destination.index, 0, removed);\n            return { ...prev,\n              columns: { ...prev.columns,\n                [source.droppableId]: { ...sourceColumn,\n                  items: sourceItems\n                },\n                [destination.droppableId]: { ...destColumn,\n                  items: destItems\n                }\n              }\n            };\n          });\n        } else {\n          this.setState(prev => {\n            const column = prev.columns[source.droppableId];\n            const copiedItems = [...column.items];\n            const [removed] = copiedItems.splice(source.index, 1);\n            copiedItems.splice(destination.index, 0, removed);\n            return { ...prev,\n              columns: { ...prev.columns,\n                [source.droppableId]: { ...column,\n                  items: copiedItems\n                }\n              }\n            };\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, Object.entries(columns).map(([id, column]) => {\n      return React.createElement(Column, Object.assign({ ...column,\n        id,\n        key: id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }));\n    }))));\n  }\n\n}\n\nexport default CreateTrack;","map":{"version":3,"sources":["C:/Users/Eric/Desktop/powerApp/client/src/components/Tracks/CreateTrack.js"],"names":["React","Component","axios","DragDropContext","Row","Column","TrackForm","StyledContainer","API_URL","CreateTrack","constructor","props","onChange","e","id","value","target","setState","onSubmit","preventDefault","trackNumber","trackName","columns","state","post","trackInfo","items","then","res","prev","name","elements","componentDidMount","get","response","copy","data","render","source","destination","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","Object","entries","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport Column from \"./TracksBoard/Column\";\r\nimport TrackForm from \"./TrackForm\";\r\nimport { StyledContainer } from \"../../styles\";\r\nimport { API_URL } from \"../../constants\";\r\n\r\nclass CreateTrack extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      trackName: \"\",\r\n      trackNumber: \"\",\r\n      elements: [],\r\n      columns: {\r\n        \"column-1\": {\r\n          name: \"Elements\",\r\n          items: [],\r\n        },\r\n        \"column-2\": {\r\n          name: \"Track List\",\r\n          items: [],\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(`${API_URL}/elements/`).then(response => {\r\n      this.setState(prev => {\r\n        const copy = { ...prev };\r\n        const { columns } = copy;\r\n        copy.elements = response.data;\r\n\r\n        columns[\"column-1\"].items = [\r\n          ...copy.columns[\"column-1\"].items,\r\n          ...response.data,\r\n        ];\r\n\r\n        return copy;\r\n      });\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    const { id, value } = e.target;\r\n    this.setState({\r\n      [id]: value,\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { trackNumber, trackName, columns } = this.state;\r\n    axios\r\n      .post(`${API_URL}/tracks/add`, {\r\n        trackNumber,\r\n        trackName,\r\n        trackInfo: columns[\"column-2\"].items,\r\n      })\r\n      .then(res => {\r\n        this.setState(prev => {\r\n          return {\r\n            ...prev,\r\n            trackName: \"\",\r\n            trackNumber: \"\",\r\n            columns: {\r\n              \"column-1\": {\r\n                name: \"Elements\",\r\n                items: prev.elements,\r\n              },\r\n              \"column-2\": {\r\n                name: \"Track List\",\r\n                items: [],\r\n              },\r\n            },\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { columns } = this.state;\r\n    return (\r\n      <StyledContainer fluid title=\"Create Track\">\r\n        <TrackForm\r\n          {...this.state}\r\n          buttonText=\"Submit\"\r\n          onChange={this.onChange}\r\n          onSubmit={this.onSubmit}\r\n        />\r\n        <DragDropContext\r\n          onDragEnd={({ source, destination }) => {\r\n            if (!destination) {\r\n              return;\r\n            }\r\n\r\n            if (source.droppableId !== destination.droppableId) {\r\n              this.setState(prev => {\r\n                const sourceColumn = prev.columns[source.droppableId];\r\n                const destColumn = prev.columns[destination.droppableId];\r\n                const sourceItems = [...sourceColumn.items];\r\n                const destItems = [...destColumn.items];\r\n                const [removed] = sourceItems.splice(source.index, 1);\r\n                destItems.splice(destination.index, 0, removed);\r\n                return {\r\n                  ...prev,\r\n                  columns: {\r\n                    ...prev.columns,\r\n                    [source.droppableId]: {\r\n                      ...sourceColumn,\r\n                      items: sourceItems,\r\n                    },\r\n                    [destination.droppableId]: {\r\n                      ...destColumn,\r\n                      items: destItems,\r\n                    },\r\n                  },\r\n                };\r\n              });\r\n            } else {\r\n              this.setState(prev => {\r\n                const column = prev.columns[source.droppableId];\r\n                const copiedItems = [...column.items];\r\n                const [removed] = copiedItems.splice(source.index, 1);\r\n                copiedItems.splice(destination.index, 0, removed);\r\n                return {\r\n                  ...prev,\r\n                  columns: {\r\n                    ...prev.columns,\r\n                    [source.droppableId]: {\r\n                      ...column,\r\n                      items: copiedItems,\r\n                    },\r\n                  },\r\n                };\r\n              });\r\n            }\r\n          }}\r\n        >\r\n          <Row>\r\n            {Object.entries(columns).map(([id, column]) => {\r\n              return <Column {...{ ...column, id, key: id }} />;\r\n            })}\r\n          </Row>\r\n        </DragDropContext>\r\n      </StyledContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTrack;\r\n"]},"metadata":{},"sourceType":"module"}