{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\Desktop\\\\powerApp\\\\client\\\\src\\\\components\\\\Tracks\\\\TracksBoard\\\\Task.js\";\nimport React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { Table } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nconst TrackTable = styled(Table)`\n  font-size: 95%;\n  table-layout: fixed;\n  white-space: nowrap;\n  background-color: none;\n  th,\n  td {\n    width: 30%;\n    padding: 2px;\n    border-style: hidden !important;\n  }\n`;\nconst ElementCard = styled.div`\n  margin: 2px;\n  padding: 10px;\n  background-color: ${props => props.isDragging ? \"lightgreen\" : \"white\"};\n  border-radius: 5px;\n  border: 1px solid lightgrey;\n`;\n\nconst Task = ({\n  _id,\n  elementCategory,\n  elementCogRating,\n  elementDescription,\n  elementDuration,\n  elementFormat,\n  elementLabel,\n  elementLink,\n  elementMarket,\n  elementNumber,\n  elementPhysRating,\n  elementSubCategory,\n  index\n}) => {\n  return React.createElement(Draggable, {\n    draggableId: _id,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, ({\n    draggableProps,\n    dragHandleProps,\n    innerRef\n  }, {\n    isDragging\n  }) => React.createElement(ElementCard, Object.assign({ ...draggableProps,\n    ...dragHandleProps,\n    isDragging\n  }, {\n    ref: innerRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(TrackTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Element #: \", elementNumber), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, elementLabel))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Description: \", elementDescription)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Format: \", elementFormat.elementFormat), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Time: \", elementDuration), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Category: \", elementCategory.elementCategory)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"SubCat: \", elementSubCategory), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Market: \", elementMarket.elementMarket), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Cog Rating: \", elementCogRating), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Phys Rating: \", elementPhysRating)), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, elementLink))))));\n};\n\nexport default Task;","map":{"version":3,"sources":["C:/Users/Eric/Desktop/powerApp/client/src/components/Tracks/TracksBoard/Task.js"],"names":["React","Draggable","Table","styled","TrackTable","ElementCard","div","props","isDragging","Task","_id","elementCategory","elementCogRating","elementDescription","elementDuration","elementFormat","elementLabel","elementLink","elementMarket","elementNumber","elementPhysRating","elementSubCategory","index","draggableProps","dragHandleProps","innerRef"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAACD,KAAD,CAAQ;;;;;;;;;;;CAAjC;AAaA,MAAMG,WAAW,GAAGF,MAAM,CAACG,GAAI;;;sBAGRC,KAAD,IAAYA,KAAK,CAACC,UAAN,GAAmB,YAAnB,GAAkC,OAAS;;;CAH7E;;AAQA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,GADY;AAEZC,EAAAA,eAFY;AAGZC,EAAAA,gBAHY;AAIZC,EAAAA,kBAJY;AAKZC,EAAAA,eALY;AAMZC,EAAAA,aANY;AAOZC,EAAAA,YAPY;AAQZC,EAAAA,WARY;AASZC,EAAAA,aATY;AAUZC,EAAAA,aAVY;AAWZC,EAAAA,iBAXY;AAYZC,EAAAA,kBAZY;AAaZC,EAAAA;AAbY,CAAD,KAcP;AACJ,SACE,oBAAC,SAAD;AAAW,IAAA,WAAW,EAAEZ,GAAxB;AAA6B,IAAA,KAAK,EAAEY,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,eAAlB;AAAmCC,IAAAA;AAAnC,GAAD,EAAgD;AAAEjB,IAAAA;AAAF,GAAhD,KACC,oBAAC,WAAD,gBACM,EAAE,GAAGe,cAAL;AAAqB,OAAGC,eAAxB;AAAyChB,IAAAA;AAAzC,GADN;AAEE,IAAA,GAAG,EAAEiB,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBN,aAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,YAAL,CAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBH,kBAAlB,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaE,aAAa,CAACA,aAA3B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWD,eAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeH,eAAe,CAACA,eAA/B,CAHF,CAJF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaU,kBAAb,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaH,aAAa,CAACA,aAA3B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBN,gBAAjB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBQ,iBAAlB,CAJF,CATF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,WAAL,CADF,CAhBF,CAPF,CAJF,CAFJ,CADF;AAuCD,CAtDD;;AAwDA,eAAeR,IAAf","sourcesContent":["import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TrackTable = styled(Table)`\r\n  font-size: 95%;\r\n  table-layout: fixed;\r\n  white-space: nowrap;\r\n  background-color: none;\r\n  th,\r\n  td {\r\n    width: 30%;\r\n    padding: 2px;\r\n    border-style: hidden !important;\r\n  }\r\n`;\r\n\r\nconst ElementCard = styled.div`\r\n  margin: 2px;\r\n  padding: 10px;\r\n  background-color: ${(props) => (props.isDragging ? \"lightgreen\" : \"white\")};\r\n  border-radius: 5px;\r\n  border: 1px solid lightgrey;\r\n`;\r\n\r\nconst Task = ({\r\n  _id,\r\n  elementCategory,\r\n  elementCogRating,\r\n  elementDescription,\r\n  elementDuration,\r\n  elementFormat,\r\n  elementLabel,\r\n  elementLink,\r\n  elementMarket,\r\n  elementNumber,\r\n  elementPhysRating,\r\n  elementSubCategory,\r\n  index,\r\n}) => {\r\n  return (\r\n    <Draggable draggableId={_id} index={index}>\r\n      {({ draggableProps, dragHandleProps, innerRef }, { isDragging }) => (\r\n        <ElementCard\r\n          {...{ ...draggableProps, ...dragHandleProps, isDragging }}\r\n          ref={innerRef}\r\n        >\r\n          <TrackTable>\r\n            <thead>\r\n              <tr>\r\n                <th>Element #: {elementNumber}</th>\r\n                <th>{elementLabel}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>Description: {elementDescription}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Format: {elementFormat.elementFormat}</td>\r\n                <td>Time: {elementDuration}</td>\r\n                <td>Category: {elementCategory.elementCategory}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>SubCat: {elementSubCategory}</td>\r\n                <td>Market: {elementMarket.elementMarket}</td>\r\n                <td>Cog Rating: {elementCogRating}</td>\r\n                <td>Phys Rating: {elementPhysRating}</td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td>{elementLink}</td>\r\n              </tr>\r\n            </tbody>\r\n          </TrackTable>\r\n        </ElementCard>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}