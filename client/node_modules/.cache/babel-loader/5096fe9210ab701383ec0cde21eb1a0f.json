{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\Desktop\\\\powerApp\\\\client\\\\src\\\\components\\\\Tracks\\\\TracksBoard\\\\Column.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { Card, ListGroup, Col } from \"react-bootstrap\";\nimport Task from \"./Task\";\nconst StyledColumnWrap = styled(Card)`\n  height: 73vh;\n  margin: 1px;\n  transition: background-color 0.1s ease 0s;\n`;\nconst StyledTaskList = styled(ListGroup)`\n  align-items: stretch;\n  background-color: ${props => props.isDraggingOver ? \"lightblue\" : \"white\"};\n  flex-grow: 1;\n  font-size: 90%;\n  overflow-y: scroll;\n  padding: 8px;\n`;\n\nconst Column = ({\n  id,\n  name,\n  items\n}) => {\n  return React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(StyledColumnWrap, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, name), React.createElement(Droppable, {\n    key: id,\n    droppableId: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, ({\n    droppableProps,\n    innerRef,\n    placeholder\n  }, {\n    isDraggingOver\n  }) => {\n    return React.createElement(StyledTaskList, Object.assign({ ...droppableProps\n    }, {\n      ref: innerRef,\n      style: {\n        backgroundColor: `${isDraggingOver ? \"lightblue\" : \"white\"}`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), items.map((task, index) => {\n      return React.createElement(Task, Object.assign({ ...task,\n        index,\n        key: task._id\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }), placeholder);\n  })));\n};\n\nexport default Column;","map":{"version":3,"sources":["C:/Users/Eric/Desktop/powerApp/client/src/components/Tracks/TracksBoard/Column.js"],"names":["React","styled","Droppable","Card","ListGroup","Col","Task","StyledColumnWrap","StyledTaskList","props","isDraggingOver","Column","id","name","items","droppableProps","innerRef","placeholder","backgroundColor","map","task","index","key","_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,QAAqC,iBAArC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,gBAAgB,GAAGN,MAAM,CAACE,IAAD,CAAO;;;;CAAtC;AAMA,MAAMK,cAAc,GAAGP,MAAM,CAACG,SAAD,CAAY;;sBAEnBK,KAAK,IAAKA,KAAK,CAACC,cAAN,GAAuB,WAAvB,GAAqC,OAAS;;;;;CAF9E;;AASA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AACtC,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,IAAd,CADF,EAEE,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAED,EAAhB;AAAoB,IAAA,WAAW,EAAEA,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEG,IAAAA,cAAF;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA;AAA5B,GAAD,EAA4C;AAAEP,IAAAA;AAAF,GAA5C,KAAmE;AAClE,WACE,oBAAC,cAAD,gBACM,EAAE,GAAGK;AAAL,KADN;AAEE,MAAA,GAAG,EAAEC,QAFP;AAGE,MAAA,KAAK,EAAE;AACLE,QAAAA,eAAe,EAAG,GAAER,cAAc,GAAG,WAAH,GAAiB,OAAQ;AADtD,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOGI,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,aAAO,oBAAC,IAAD,gBAAU,EAAE,GAAGD,IAAL;AAAWC,QAAAA,KAAX;AAAkBC,QAAAA,GAAG,EAAEF,IAAI,CAACG;AAA5B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAFA,CAPH,EAUGN,WAVH,CADF;AAcD,GAhBH,CAFF,CADF,CADF;AAyBD,CA1BD;;AA4BA,eAAeN,MAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport { Card, ListGroup, Col } from \"react-bootstrap\";\r\nimport Task from \"./Task\";\r\n\r\nconst StyledColumnWrap = styled(Card)`\r\n  height: 73vh;\r\n  margin: 1px;\r\n  transition: background-color 0.1s ease 0s;\r\n`;\r\n\r\nconst StyledTaskList = styled(ListGroup)`\r\n  align-items: stretch;\r\n  background-color: ${props => (props.isDraggingOver ? \"lightblue\" : \"white\")};\r\n  flex-grow: 1;\r\n  font-size: 90%;\r\n  overflow-y: scroll;\r\n  padding: 8px;\r\n`;\r\n\r\nconst Column = ({ id, name, items }) => {\r\n  return (\r\n    <Col>\r\n      <StyledColumnWrap>\r\n        <Card.Header>{name}</Card.Header>\r\n        <Droppable key={id} droppableId={id}>\r\n          {({ droppableProps, innerRef, placeholder }, { isDraggingOver }) => {\r\n            return (\r\n              <StyledTaskList\r\n                {...{ ...droppableProps }}\r\n                ref={innerRef}\r\n                style={{\r\n                  backgroundColor: `${isDraggingOver ? \"lightblue\" : \"white\"}`,\r\n                }}\r\n              >\r\n                {items.map((task, index) => {\r\n                  return <Task {...{ ...task, index, key: task._id }} />;\r\n                })}\r\n                {placeholder}\r\n              </StyledTaskList>\r\n            );\r\n          }}\r\n        </Droppable>\r\n      </StyledColumnWrap>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n"]},"metadata":{},"sourceType":"module"}