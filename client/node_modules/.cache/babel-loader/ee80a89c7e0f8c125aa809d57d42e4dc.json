{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eric\\\\Desktop\\\\powerApp\\\\client\\\\src\\\\components\\\\Elements\\\\DropdownItems\\\\Formats\\\\FormatList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport FormatsTableRow from \"./FormatsTableRow\";\nimport { CoolTableHead, StyledTable, StyledTbody, StyledThead } from \"../../../../styles\";\nimport { API_URL } from \"../../../../constants\";\n\nclass FormatList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchFormats = () => axios.get(`${API_URL}/formats/`).then(({\n      data: formats\n    }) => {\n      this.setState({\n        formats\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n\n    this.deleteFormat = id => {\n      axios.delete(`${API_URL}/formats/${id}`).then(response => {\n        alert(\"deleted!\");\n        this.setState(({\n          formats\n        }) => {\n          return {\n            formats: formats.filter(el => el._id !== id)\n          };\n        });\n      });\n    };\n\n    this.state = {\n      formats: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchFormats();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      newItem\n    } = this.props;\n\n    if (prevProps.newItem !== newItem) {\n      this.fetchFormats();\n    }\n  }\n\n  render() {\n    const {\n      formats\n    } = this.state;\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: \"6vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Manage Formats\"), React.createElement(StyledTable, {\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(StyledThead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(CoolTableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Name\"), React.createElement(CoolTableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Actions\"))), React.createElement(StyledTbody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, formats.map(currentFormat => {\n      return React.createElement(FormatsTableRow, Object.assign({\n        key: currentFormat._id,\n        deleteFormat: this.deleteFormat\n      }, currentFormat, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }));\n    }))));\n  }\n\n}\n\nexport default FormatList;","map":{"version":3,"sources":["C:/Users/Eric/Desktop/powerApp/client/src/components/Elements/DropdownItems/Formats/FormatList.js"],"names":["React","Component","axios","FormatsTableRow","CoolTableHead","StyledTable","StyledTbody","StyledThead","API_URL","FormatList","constructor","props","fetchFormats","get","then","data","formats","setState","catch","error","console","log","deleteFormat","id","delete","response","alert","filter","el","_id","state","componentDidMount","componentDidUpdate","prevProps","newItem","render","marginTop","map","currentFormat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,oBALP;AAMA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AACjCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,YAhBmB,GAgBJ,MACbV,KAAK,CACFW,GADH,CACQ,GAAEL,OAAQ,WADlB,EAEGM,IAFH,CAEQ,CAAC;AAAEC,MAAAA,IAAI,EAAEC;AAAR,KAAD,KAAuB;AAC3B,WAAKC,QAAL,CAAc;AAAED,QAAAA;AAAF,OAAd;AACD,KAJH,EAKGE,KALH,CAKSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPH,CAjBiB;;AAAA,SA0BnBG,YA1BmB,GA0BJC,EAAE,IAAI;AACnBrB,MAAAA,KAAK,CAACsB,MAAN,CAAc,GAAEhB,OAAQ,YAAWe,EAAG,EAAtC,EAAyCT,IAAzC,CAA8CW,QAAQ,IAAI;AACxDC,QAAAA,KAAK,CAAC,UAAD,CAAL;AACA,aAAKT,QAAL,CAAc,CAAC;AAAED,UAAAA;AAAF,SAAD,KAAiB;AAC7B,iBAAO;AACLA,YAAAA,OAAO,EAAEA,OAAO,CAACW,MAAR,CAAeC,EAAE,IAAIA,EAAE,CAACC,GAAH,KAAWN,EAAhC;AADJ,WAAP;AAGD,SAJD;AAKD,OAPD;AAQD,KAnCkB;;AAEjB,SAAKO,KAAL,GAAa;AAAEd,MAAAA,OAAO,EAAE;AAAX,KAAb;AACD;;AAEDe,EAAAA,iBAAiB,GAAG;AAClB,SAAKnB,YAAL;AACD;;AAEDoB,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKvB,KAAzB;;AACA,QAAIsB,SAAS,CAACC,OAAV,KAAsBA,OAA1B,EAAmC;AACjC,WAAKtB,YAAL;AACD;AACF;;AAuBDuB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA;AAAF,QAAc,KAAKc,KAAzB;AACA,WACE;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,WAAD;AAAa,MAAA,KAAK,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,CADF,EAOE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGpB,OAAO,CAACqB,GAAR,CAAYC,aAAa,IAAI;AAC5B,aACE,oBAAC,eAAD;AACE,QAAA,GAAG,EAAEA,aAAa,CAACT,GADrB;AAEE,QAAA,YAAY,EAAE,KAAKP;AAFrB,SAGMgB,aAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAOD,KARA,CADH,CAPF,CAFF,CADF;AAwBD;;AAhEgC;;AAmEnC,eAAe7B,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport FormatsTableRow from \"./FormatsTableRow\";\r\nimport {\r\n  CoolTableHead,\r\n  StyledTable,\r\n  StyledTbody,\r\n  StyledThead,\r\n} from \"../../../../styles\";\r\nimport { API_URL } from \"../../../../constants\";\r\n\r\nclass FormatList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { formats: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchFormats();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { newItem } = this.props;\r\n    if (prevProps.newItem !== newItem) {\r\n      this.fetchFormats();\r\n    }\r\n  }\r\n\r\n  fetchFormats = () =>\r\n    axios\r\n      .get(`${API_URL}/formats/`)\r\n      .then(({ data: formats }) => {\r\n        this.setState({ formats });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n\r\n  deleteFormat = id => {\r\n    axios.delete(`${API_URL}/formats/${id}`).then(response => {\r\n      alert(\"deleted!\");\r\n      this.setState(({ formats }) => {\r\n        return {\r\n          formats: formats.filter(el => el._id !== id),\r\n        };\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { formats } = this.state;\r\n    return (\r\n      <div style={{ marginTop: \"6vh\" }}>\r\n        <h3>Manage Formats</h3>\r\n        <StyledTable hover>\r\n          <StyledThead>\r\n            <tr>\r\n              <CoolTableHead>Name</CoolTableHead>\r\n              <CoolTableHead>Actions</CoolTableHead>\r\n            </tr>\r\n          </StyledThead>\r\n          <StyledTbody>\r\n            {formats.map(currentFormat => {\r\n              return (\r\n                <FormatsTableRow\r\n                  key={currentFormat._id}\r\n                  deleteFormat={this.deleteFormat}\r\n                  {...currentFormat}\r\n                />\r\n              );\r\n            })}\r\n          </StyledTbody>\r\n        </StyledTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormatList;\r\n"]},"metadata":{},"sourceType":"module"}